{"filter":false,"title":"BooksController.php","tooltip":"/cms/app/Http/Controllers/BooksController.php","undoManager":{"mark":17,"position":17,"stack":[[{"start":{"row":0,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","class BooksController extends Controller","{","    //","}",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":64,"column":0},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","","class BooksController extends Controller","{","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_name' => 'required|min:3|max:255',","            'item_number' => 'required|min:1|max:3',","            'item_amount' => 'required|max:6',","            'published' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        // データ更新","        $books = Book::find($request->id);","        $books->item_name   = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published   = $request->published;","        $books->save();","        return redirect('/');","    }","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_name' => 'required|min:3|max:255',","                'item_number' => 'required|min:1|max:3',","                'item_amount' => 'required|max:6',","                'published' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        // Eloquentモデル（登録処理）","        $books = new Book;","        $books->item_name = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published = $request->published;","        $books->save();","        return redirect('/');","    }","}",""]}],[{"start":{"row":0,"column":0},"end":{"row":64,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","","class BooksController extends Controller","{","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_name' => 'required|min:3|max:255',","            'item_number' => 'required|min:1|max:3',","            'item_amount' => 'required|max:6',","            'published' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        // データ更新","        $books = Book::find($request->id);","        $books->item_name   = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published   = $request->published;","        $books->save();","        return redirect('/');","    }","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_name' => 'required|min:3|max:255',","                'item_number' => 'required|min:1|max:3',","                'item_amount' => 'required|max:6',","                'published' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        // Eloquentモデル（登録処理）","        $books = new Book;","        $books->item_name = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published = $request->published;","        $books->save();","        return redirect('/');","    }","}",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":86,"column":0},"action":"insert","lines":["<?php","namespace App\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","","class BooksController extends Controller","{","    //本ダッシュボード表示","    public function index() {","        $books = Book::orderBy('created_at', 'asc')->get();","        return view('books', [","            'books' => $books","        ]);","    }","    ","    //更新画面","    public function edit(Book $books) {","        return view('booksedit', [","            'book' => $books","        ]);","    }","    ","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_name' => 'required|min:3|max:255',","            'item_number' => 'required|min:1|max:3',","            'item_amount' => 'required|max:6',","            'published' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        //データ更新","        $books = Book::find($request->id);","        $books->item_name   = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published   = $request->published;","        $books->save();","        return redirect('/');","    }","    ","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_name' => 'required|min:3|max:255',","                'item_number' => 'required|min:1|max:3',","                'item_amount' => 'required|max:6',","                'published' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        //Eloquentモデル（登録処理）","        $books = new Book;","        $books->item_name = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published = $request->published;","        $books->save();","        return redirect('/');","    }","        ","    //削除処理","    public function destroy(Book $book) {","        $book->delete();","        return redirect('/');","    }","    ","}",""]}],[{"start":{"row":0,"column":0},"end":{"row":86,"column":0},"action":"remove","lines":["<?php","namespace App\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","","class BooksController extends Controller","{","    //本ダッシュボード表示","    public function index() {","        $books = Book::orderBy('created_at', 'asc')->get();","        return view('books', [","            'books' => $books","        ]);","    }","    ","    //更新画面","    public function edit(Book $books) {","        return view('booksedit', [","            'book' => $books","        ]);","    }","    ","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_name' => 'required|min:3|max:255',","            'item_number' => 'required|min:1|max:3',","            'item_amount' => 'required|max:6',","            'published' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        //データ更新","        $books = Book::find($request->id);","        $books->item_name   = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published   = $request->published;","        $books->save();","        return redirect('/');","    }","    ","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_name' => 'required|min:3|max:255',","                'item_number' => 'required|min:1|max:3',","                'item_amount' => 'required|max:6',","                'published' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        //Eloquentモデル（登録処理）","        $books = new Book;","        $books->item_name = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published = $request->published;","        $books->save();","        return redirect('/');","    }","        ","    //削除処理","    public function destroy(Book $book) {","        $book->delete();","        return redirect('/');","    }","    ","}",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":112,"column":1},"action":"insert","lines":["<?php","namespace app\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","use Helper;","","class BooksController extends Controller","{","    //コンストラクタ （このクラスが呼ばれたら最初に処理をする）","    public function __construct()","    {","        $this->middleware('auth');","    }","    ","    ","    //本ダッシュボード表示","    public function index() {","        $books = Book::where('user_id',Auth::user()->id)->orderBy('created_at', 'asc')->paginate(3);","        return view('books', [","            'books' => $books,","        ]);","    }","","    ","    //更新画面","    public function edit($book_id){","        $books = Book::where('user_id',Auth::user()->id)->find($book_id);","        return view('booksedit', [","           'book' => $books","        ]);","    }","    ","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_date' => 'required',","            'item_number' => 'required',","            'item_number2' => 'required',","            'item_number3' => 'required',","            'item_number4' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        //データ更新","        $books = Book::where('user_id',Auth::user()->id)->find($request->id);","        $books->item_date   = $request->item_date;","        $books->item_number = $request->item_number;","        $books->item_number2 = $request->item_number2;","        $books->item_number3 = $request->item_number3;","        $books->item_number4 = $request->item_number4;","        $books->save();","        return redirect('/');","    }","    ","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_date' => 'required',","                'item_number' => 'required',","                'item_number2' => 'required',","                'item_number3' => 'required',","                'item_number4' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        ","        $file = $request->file('item_file'); //file取得","          if( !empty($file) ){                //fileが空かチェック","            $filename = $file->getClientOriginalName();   //ファイル名を取得","            $move = $file->move('./upload/',$filename);  //ファイルを移動：パスが“./upload/”の場合もあるCloud9","          }else{","            $filename = \"\";","              ","          }","        //Eloquentモデル（登録処理）","        $books = new Book;","        $books->user_id  = Auth::user()->id; //追加のコード","        $books->item_date = $request->item_date;","        $books->item_number = $request->item_number;","        $books->item_number2 = $request->item_number2;","        $books->item_number3 = $request->item_number3;","        $books->item_number4 = $request->item_number4;","        $books->item_file = $filename;","        $books->save();","        return redirect('/')->with('message', '勤務登録が完了しました');","    }","        ","    //削除処理","    public function destroy(Book $book) {","        $book->delete();","        return redirect('/');","    }","   ","    ","    ","}"]}],[{"start":{"row":22,"column":100},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":23,"column":0},"end":{"row":23,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":23,"column":8},"end":{"row":23,"column":20},"action":"insert","lines":["ddd($books);"],"id":6}],[{"start":{"row":23,"column":0},"end":{"row":23,"column":20},"action":"remove","lines":["        ddd($books);"],"id":7},{"start":{"row":22,"column":100},"end":{"row":23,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":12,"column":1},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]},{"start":{"row":13,"column":4},"end":{"row":14,"column":0},"action":"insert","lines":["",""]},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":39},"action":"insert","lines":["protected $dates = ['public_date'];"],"id":9}],[{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"remove","lines":["s"],"id":10},{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"remove","lines":["e"]},{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"remove","lines":["t"]},{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"remove","lines":["a"]},{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"remove","lines":["d"]}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":20},"action":"insert","lines":["Books"],"id":11}],[{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"remove","lines":["s"],"id":12},{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"remove","lines":["k"]},{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"remove","lines":["o"]},{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"remove","lines":["o"]}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"remove","lines":[" "],"id":13},{"start":{"row":14,"column":16},"end":{"row":15,"column":0},"action":"insert","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "],"id":14},{"start":{"row":14,"column":16},"end":{"row":15,"column":0},"action":"remove","lines":["",""]},{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"remove","lines":["B"]}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["b"],"id":15},{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["o"]},{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["o"]},{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"insert","lines":["k"]},{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"insert","lines":["s"]}],[{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"insert","lines":[" "],"id":16}],[{"start":{"row":14,"column":3},"end":{"row":14,"column":39},"action":"remove","lines":[" protected $books = ['public_date'];"],"id":17},{"start":{"row":14,"column":2},"end":{"row":14,"column":3},"action":"remove","lines":[" "]},{"start":{"row":14,"column":1},"end":{"row":14,"column":2},"action":"remove","lines":[" "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"remove","lines":[" "]},{"start":{"row":13,"column":4},"end":{"row":14,"column":0},"action":"remove","lines":["",""]},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":12,"column":1},"end":{"row":13,"column":0},"action":"remove","lines":["",""],"id":18}],[{"start":{"row":33,"column":27},"end":{"row":33,"column":28},"action":"insert","lines":["c"],"id":19}]]},"ace":{"folds":[],"scrolltop":1014,"scrollleft":0,"selection":{"start":{"row":26,"column":5},"end":{"row":26,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":42,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1663060915901,"hash":"08d3bb3e2acf3fea873855ab75442442236e2318"}